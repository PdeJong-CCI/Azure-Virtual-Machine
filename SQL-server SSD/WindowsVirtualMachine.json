{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineName": {
            "type": "string",
            "minLength": 15,
            "maxLength": 15,
            "metadata": {
                "description": "Name of the Virtual Machine. Syntax: cci [vmc[nnn]] [prd|dev|sta|acc] [sql]. For example: ccivmc001prdsql"
            },
            "defaultValue": "cci [vmc[nnn]] [prd|dev|sta|acc] [sql]"
        },
        "virtualMachineSize": {
            "type": "string",
            "allowedValues": [
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2"
            ],
            "metadata": {
                "description": "The size for the Web Server Virtual Machine. For more info see: https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-windows-sizes/#dsv2-series"
            },
            "defaultValue": "Standard_DS3_v2"
        },
        "windowsOSAndSQLVersion": {
            "type": "string",
            "defaultValue": "SQL2014SP2-WS2012R2",
            "allowedValues": [
                "SQL2014SP2-WS2012R2"
            ],
            "metadata": {
                "description": "The Windows and SQL-server version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: SQL2014SP2-WS2012R2."
            }
        },
        "customerName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "metadata": {
                "description": "Name of the customer. Choose shared if the server is not dedicated for a specific customer. Syntax: [shared] | [name of customer, lowercase]."
            },
            "defaultValue": "[shared] | [name of customer, lowercase]"
        },
        "adminUsername": {
            "type": "string",
            "minLength": 8,
            "metadata": {
                "description": "Username for the Virtual Machine. Default administrator username: cciadmin."
            },
            "defaultValue": "cciadmin"
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine. Length for administrator password must be 72 characters long."
            }
        },
        "sqlAdminUsername": {
            "type": "string",
            "minLength": 5,
            "metadata": {
                "description": "Administrator username for the SQL-server. Default administrator username = ccisa."
            },
            "defaultValue": "ccisa"
        },
        "sqlAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Adminstrator password for the SQL-server. Length for administrator password must be 72 characters long."
            }
        },
        "vhdPremiumStorageAccountName": {
            "type": "string",
            "minLength": 15,
            "maxLength": 15,
            "metadata": {
                "description": "Name of the storage account (type premium) for the VHD's. Syntax: cci [sto] [ssd] [vmc[nnn]]. For example ccistossdvmc001."
            },
            "defaultValue": "cci [sto] [ssd] [vmc[nnn]]"
        },
        "vhdStandardStorageAccountName": {
            "type": "string",
            "minLength": 15,
            "maxLength": 15,
            "metadata": {
                "description": "Name of the storage account (type standard) for the VHD's. Syntax: cci [sto] [hdd] [vmc[nnn]]. For example: ccistohddvmc001."
            },
            "defaultValue": "cci [sto] [hdd] [vmc[nnn]]"
        },
        "networkInterfaceName": {
            "type": "string",
            "minLength": 13,
            "maxLength": 13,
            "metadata": {
                "description": "Name for the Virtual Machine network interface. Syntax: cci [nic][n][vmc[nnn]]. For example: ccinic1vmc001."
            },
            "defaultValue": "cci [nic][n][vmc[nnn]]"
        },
        "publicIpAddressName": {
            "type": "string",
            "minLength": 13,
            "maxLength": 13,
            "metadata": {
                "description": "Name for the public IP address. Syntax: cci [pip][n][vmc[nnn]]. For example: ccipip1vmc001."
            },
            "defaultValue": "cci [pip][n][vmc[nnn]]"
        },
        "numDataDisks": {
            "type": "int",
            "minValue": 0,
            "maxValue": 16,
            "metadata": {
                "description": "Number of data disks that have to be attached to the Virtual Machine. Minimum: 0, maximum: 16. For more info see: https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-windows-sizes/#a-series"
            },
            "defaultValue": 0
        },
        "sqlStorageWorkloadType": {
          "type": "string",
          "metadata": {
            "description": "SQL Server Virtual Machine Workload Type: GENERAL - general work load; DW - datawarehouse work load; OLTP - Transactional processing work load. Default is GENERAL."
          },
          "allowedValues": [
            "GENERAL",
            "OLTP",
            "DW"
          ],
          "defaultValue": "GENERAL"
        },
        "sqlAutopatchingDayOfWeek": {
            "type": "string",
            "metadata": {
                "description": "SQL Server Auto Patching Day of A Week. Default is Sunday."
            },
            "allowedValues": [
                "Everyday",
                "Never",
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
            ],
            "defaultValue": "Sunday"
        },
        "sqlAutopatchingStartHour": {
            "type": "string",
            "metadata": {
                "description": "SQL Server Auto Patching Starting Hour. Default is 2 (02:00)."
            },
            "allowedValues": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11",
                "12",
                "13",
                "14",
                "15",
                "16",
                "17",
                "18",
                "19",
                "20",
                "21",
                "22",
                "23"
            ],
            "defaultValue": "2"
        },
        "sqlAutopatchingWindowDuration": {
            "type": "string",
            "metadata": {
                "description": "SQL Server Auto Patching Duration Window in minutes. Default is 60 minutes."
            },
            "allowedValues": [
                "30",
                "60",
                "90",
                "120",
                "150",
                "180"
            ],
            "defaultValue": "60"
        }
    },
    "variables": {
        "imagePublisher": "MicrosoftSQLServer",
        "imageOffer": "WindowsServer",

        "sqlImagePublisher": "MicrosoftSQLServer",
        "sqlImageOffer": "SQL2014SP2-WS2012R2",
        "sqlImageSku": "Standard",
        "sqlConnectivityType": "Private",
        "sqlPortNumber": "1433",
        "sqlStorageStartingDeviceId": "2",
        "sqlStorageWorkloadType": "GENERAL",
        "sqlStorageDisksConfigurationType": "NEW",
        "rServicesEnabled":  "false",

        "virtualNetworkResourceGroup": "ccirsglivitsshared",
        "virtualNetworkName": "ccivnwprdwe01",
        "virtualNetworkId": "[resourceId(variables('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetName": "backend",
        "subnetRef": "[concat(variables('virtualNetworkId'), '/subnets/', variables('subnetName'))]",
        "publicIPAddressType": "Static",
        "dnsNameForPublicIP": "[parameters('publicIpAddressName')]",

        "diagnosticsStorageAccountResourceGroup": "ccirsglivitsshared",
        "diagnosticsStorageAccountName": "ccistohdddia01",
        "diagnosticsStorageAccountId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('diagnosticsStorageAccountResourceGroup'), '/providers/', 'Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]",

        "metricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]",
        "metricsclosing": "[concat('<Metrics resourceId=\"', variables('metricsresourceid'), '\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>')]",
        "metricsstart": "<WadCfg><DiagnosticMonitorConfiguration xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\" overallQuotaInMB=\"4096\"><DiagnosticInfrastructureLogs scheduledTransferPeriod=\"PT1M\" scheduledTransferLogLevelFilter=\"Warning\"/><WindowsEventLog scheduledTransferPeriod=\"PT1M\"><DataSource name=\"Security!*[System[(Level = 1) or (Level = 2)]]\"/><DataSource name=\"Application!*[System[(Level = 1) or (Level = 2)]]\"/><DataSource name=\"Windows Azure!*[System[(Level = 1) or (Level = 2)]]\"/><DataSource name=\"System!*[System[(Level = 1) or (Level = 2)]]\"/><DataSource name=\"System!*[System[Provider[@Name='Microsoft Antimalware']]]\"/></WindowsEventLog>",
        "metricscounters": "<PerformanceCounters scheduledTransferPeriod=\"PT0S\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU percentage guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Interrupt Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU interrupt time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Parking Status\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU parking status\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\% Processor Performance\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processor percent perf.\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processor frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Threads\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Thread(_Total)\\Context Switches/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Context switches\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory percentage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Cache Faults/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Cache faults\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Page Faults/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Page faults\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Page Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Page reads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Pages/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Memory pages\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Transition Faults/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Transition faults\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Pool Paged Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Paged pool\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Pool Nonpaged Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Non-paged pool\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Process total time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Page Faults/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Process page faults\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Process total threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Process total handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Private Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Process function bytes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Working Set\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Process working set\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Working Set - Private\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Process function working set\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\Bytes Total/Sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Web service bytes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\ISAPI Extension Requests/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"ISAPI extension requests\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\Connection Attempts/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Web connection attempts\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\Current Connections\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Web current connections\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\Get Requests/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Web get requests\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\Post Requests/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Web post requests\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\TCPv4\\Connections Established\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"TCP connections established\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\TCPv4\\Connection Failures\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"TCP connections failed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\TCPv4\\Connections Reset\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"TCP connections reset\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\TCPv4\\Segments Sent/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"TCP segments sent\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\TCPv4\\Segments Received/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"TCP segments received\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\TCPv4\\Segments Retransmitted/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"TCP seg. restransmitted\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Jit(_Global_)\\% Time in Jit\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\".NET CLR time in jit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Loading(_Global_)\\% Time Loading\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\".NET CLR time loading\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR LocksAndThreads(_Global_)\\Current Queue Length\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\".NET CLR queue length\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR LocksAndThreads(_Global_)\\Contention Rate / sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\".NET CLR contention rate\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR LocksAndThreads(_Global_)\\# of current logical Threads\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\".NET CLR logical threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR LocksAndThreads(_Global_)\\# of current physical Threads\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\".NET CLR phys. threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\% Time in GC\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\".NET CLR time in GC\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\Allocated Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\".NET CLR allocated\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\Gen 0 heap size\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\".NET CLR gen 0 heap size\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\Gen 1 heap size\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\".NET CLR gen 1 heap size\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\Gen 2 heap size\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\".NET CLR gen 2 heap size\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\Large Object Heap size\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\".NET CLR large obj. heap size\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Memory(_Global_)\\# Bytes in all Heaps\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\".NET CLR heap bytes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Networking(_Global_)\\Connections Established\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\".NET CLR connections \" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Remoting(_Global_)\\Remote Calls/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\".NET CLR remote calls\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Exceptions(_Global_)\\# of Exceps Thrown / sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\".NET CLR exception rate\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\.NET CLR Interop(_Global_)\\# of marshalling\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\".NET CLR interop marsh.\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
        "wadcfgx": "[concat(variables('metricsstart'), variables('metricscounters'), variables('metricsclosing'))]",

        "workspaceResourceGroupName": "ccirsglivitsshared",
        "workspaceName": "cciomslivits",

        "vhdPremiumStorageType": "Premium_LRS",
        "vhdStandardStorageType": "Standard_LRS",
        "vhdStorageContainerName": "vhds",

        "dataDiskCaching": "None",
        "sizeOfDataDisksInGB": 1023,
        "dataDiskArray": [
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk01' ,'.vhd')]",
                "lun": 0,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk01' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk02' ,'.vhd')]",
                "lun": 1,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk02' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk03' ,'.vhd')]",
                "lun": 2,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk03' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk04' ,'.vhd')]",
                "lun": 3,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk04' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk05' ,'.vhd')]",
                "lun": 4,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk05' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk06' ,'.vhd')]",
                "lun": 5,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk06' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk07' ,'.vhd')]",
                "lun": 6,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk07' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk08' ,'.vhd')]",
                "lun": 7,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk08' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk09' ,'.vhd')]",
                "lun": 8,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk09' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk10' ,'.vhd')]",
                "lun": 9,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk10' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk11' ,'.vhd')]",
                "lun": 10,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk11' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk12' ,'.vhd')]",
                "lun": 11,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk12' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk13' ,'.vhd')]",
                "lun": 12,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk13' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk14' ,'.vhd')]",
                "lun": 13,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk14' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk15' ,'.vhd')]",
                "lun": 14,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk15' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            },
            {
                "name": "[concat(parameters('virtualMachineName'), 'datadisk16' ,'.vhd')]",
                "lun": 15,
                "vhd": {
                    "uri": "[concat('https://', parameters('vhdStandardStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'datadisk16' ,'.vhd')]"
                },
                "createOption": "Empty",
                "caching": "[variables('dataDiskCaching')]",
                "diskSizeGB": "[variables('sizeOfDataDisksInGB')]"
            }
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('vhdPremiumStorageAccountName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "StorageAccount",
                "role": "db",
                "billing": "nl",
                "customer": "[parameters('customerName')]"
            },
            "properties": {
                "accountType": "[variables('vhdPremiumStorageType')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('vhdStandardStorageAccountName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "StorageAccount",
                "role": "db",
                "billing": "nl",
                "customer": "[parameters('customerName')]"
            },
            "properties": {
                "accountType": "[variables('vhdStandardStorageType')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('publicIpAddressName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "PublicIPAddress",
                "role": "db",
                "billing": "nl",
                "customer": "[parameters('customerName')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsNameForPublicIP')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('networkInterfaceName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "NetworkInterface",
                "role": "db",
                "billing": "nl",
                "customer": "[parameters('customerName')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('virtualMachineName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "VirtualMachine",
                "role": "db",
                "billing": "nl",
                "customer": "[parameters('customerName')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('vhdPremiumStorageAccountName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('vhdStandardStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('sqlImagePublisher')]",
                        "offer": "[variables('sqlImageOffer')]",
                        "sku": "[variables('sqlImageSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('virtualMachineName'), 'osdisk01' ,'.vhd')]",
                        "vhd": {
                            "uri": "[concat('https://', parameters('vhdPremiumStorageAccountName'), '.blob.core.windows.net/',  variables('vhdStorageContainerName'), '/', parameters('virtualMachineName'), 'osdisk01' ,'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": "[take(variables('dataDiskArray'),parameters('numDataDisks'))]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('diagnosticsStorageAccountName'), '.blob.core.windows.net')]"
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "Microsoft.Insights.VMDiagnosticsSettings",
                    "apiVersion": "2015-06-15",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "displayName": "AzureDiagnostics",
                        "role": "db",
                        "billing": "nl",
                        "customer": "[parameters('customerName')]"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Diagnostics",
                        "type": "IaaSDiagnostics",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "StorageAccount": "[variables('diagnosticsStorageAccountName')]",
                            "xmlCfg": "[base64(variables('wadcfgx'))]"
                        },
                        "protectedSettings": {
                            "storageAccountName": "[variables('diagnosticsStorageAccountName')]",
                            "storageAccountKey": "[listkeys(variables('diagnosticsStorageAccountId'), '2015-06-15').key1]",
                            "storageAccountEndPoint": "https://core.windows.net"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "Microsoft.EnterpriseCloud.Monitoring",
                    "apiVersion": "2015-06-15",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "displayName": "AzureMonitoring",
                        "role": "db",
                        "billing": "nl",
                        "customer": "[parameters('customerName')]"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "MicrosoftMonitoringAgent",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "workspaceId": "[reference(resourceId(variables('workspaceResourceGroupName'),'Microsoft.OperationalInsights/workspaces/', variables('workspaceName')), '2015-03-20').customerId]"
                        },
                        "protectedSettings": {
                            "workspaceKey": "[listKeys(resourceId(variables('workspaceResourceGroupName'),'Microsoft.OperationalInsights/workspaces/', variables('workspaceName')), '2015-03-20').primarySharedKey]"
                        }
                    }
                },
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('virtualMachineName'),'/', 'IaaSAntimalware')]",
                    "apiVersion": "2015-05-01-preview",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "displayName": "Antimalware",
                        "role": "db",
                        "billing": "nl",
                        "customer": "[parameters('customerName')]"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "IaaSAntimalware",
                        "typeHandlerVersion": "1.1",
                        "settings": {
                            "AntimalwareEnabled": "true",
                            "Exclusions": {
                                "Paths": "",
                                "Extensions": "",
                                "Processes": ""
                            },
                            "RealtimeProtectionEnabled": "false",
                            "ScheduledScanSettings": {
                                "isEnabled": "true",
                                "scanType": "Quick",
                                "day": "7",
                                "time": "120"
                            }
                        },
                        "protectedSettings": null
                    }
                },
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('virtualMachineName'), '/SqlIaasExtension')]",
                    "apiVersion": "2015-06-15",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "displayName": "SQL automate administration tasks",
                        "role": "db",
                        "billing": "nl",
                        "customer": "[parameters('customerName')]"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]",
                        "[concat('Microsoft.Compute/virtualMachines/',parameters('virtualMachineName'),'/extensions/', 'Microsoft.Insights.VMDiagnosticsSettings')]"
                    ],
                    "properties": {
                        "type": "SqlIaaSAgent",
                        "publisher": "Microsoft.SqlServer.Management",
                        "typeHandlerVersion": "1.2",
                        "autoUpgradeMinorVersion": "true",
                        "settings": {
                            "AutoTelemetrySettings": {
                                "Region": "[resourceGroup().location]"
                            },
                            "AutoPatchingSettings": {
                                "PatchCategory": "WindowsMandatoryUpdates",
                                "Enable": false,
                                "DayOfWeek": "[parameters('sqlAutopatchingDayOfWeek')]",
                                "MaintenanceWindowStartingHour": "[parameters('sqlAutopatchingStartHour')]",
                                "MaintenanceWindowDuration": "[parameters('sqlAutopatchingWindowDuration')]"
                            },
                            "AutoBackupSettings": {
                                "Enable": false,
                                "RetentionPeriod": "30",
                                "EnableEncryption": false
                            },
                            "KeyVaultCredentialSettings": {
                                "Enable": false,
                                "CredentialName": ""
                            },
                            "ServerConfigurationsManagementSettings": {
                                "SQLConnectivityUpdateSettings": {
                                    "ConnectivityType": "[variables('sqlConnectivityType')]",
                                    "Port": "[variables('sqlPortNumber')]"
                                },
                                "SQLWorkloadTypeUpdateSettings": {
                                    "SQLWorkloadType": "[parameters('sqlStorageWorkloadType')]"
                                },
                                "SQLStorageUpdateSettings": {
                                    "DiskCount": "[parameters('numDataDisks')]",
                                    "NumberOfColumns": "[parameters('numDataDisks')]",
                                    "StartingDeviceID": "[variables('sqlStorageStartingDeviceId')]",
                                    "DiskConfigurationType": "[variables('sqlStorageDisksConfigurationType')]"
                                },
                                "AdditionalFeaturesServerConfigurations": {
                                    "IsRServicesEnabled": "[variables('rServicesEnabled')]"
                                }
                            }
                        },
                        "protectedSettings": {
                            "SQLAuthUpdateUserName": "[parameters('sqlAdminUsername')]",
                            "SQLAuthUpdatePassword": "[parameters('sqlAdminPassword')]"
                        }
                    }
                }
            ]
        }
    ]
}
